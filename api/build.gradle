buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.2.0'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'com.github.pivotalservices.cf-app' version '2.3.0-rc.4'
    id 'org.unbroken-dome.test-sets' version '3.0.1'
    id 'com.avast.gradle.docker-compose' version '0.7.1'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

apply plugin: "com.google.cloud.tools.appengine-appyaml"

group = 'com.ford.labs'
archivesBaseName = 'retroquest'
sourceCompatibility = 1.11

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.0.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web:2.3.0.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-websocket:2.3.0.RELEASE'
    compile 'org.springframework.cloud:spring-cloud-starter-oauth2:2.2.2.RELEASE'
    compile 'io.jsonwebtoken:jjwt:0.9.0'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compile 'org.apache.commons:commons-csv:1.5'
    compile 'org.apache.commons:commons-lang3:3.7'
    compile 'org.apache.httpcomponents:httpclient:4.5.5'
    compile 'commons-io:commons-io:2.6'
    compile 'org.flywaydb:flyway-core'
    runtime 'mysql:mysql-connector-java'
    runtime 'com.h2database:h2:1.4.200'
    runtime group: 'com.google.cloud.sql', name: 'mysql-socket-factory', version: '1.0.13'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
}

bootRun {
    sourceResources sourceSets.main
}

testSets {
    apiTest
}

task dockerApiTest() {
}

dockerApiTest.finalizedBy apiTest

task runAllTests(dependsOn: [test, apiTest]) {
}

task withH2 {
    bootRun.configure {
        systemProperty 'spring.profiles.active', 'h2'
    }
}
withH2.finalizedBy bootRun

task withDockerDb {
    bootRun.configure {
        systemProperty 'spring.profiles.active', 'dockerdb'
    }
}
withDockerDb.finalizedBy bootRun

jar {
    archiveName = "${archivesBaseName}.jar"
}

dockerCompose {

    apiTests {
        useComposeFiles = ['docker-compose.yml']
        isRequiredBy(project.tasks.dockerApiTest)
    }

    waitForTcpPorts = true
}

task buildPackage(){}

task wrapper(type: Wrapper) {
    gradleVersion = '5.6'
}

buildPackage.dependsOn ':ui:npm_run_build-prod'
buildPackage.finalizedBy 'build'

appengine {
    tools {
        // configure the Cloud Sdk tooling
    }
    stage {
        // configure staging for deployment
    }
    deploy {
        projectId = 'retroquest'
        version = 'initial' + getDateTs()
    }
}

def getDateTs() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}
